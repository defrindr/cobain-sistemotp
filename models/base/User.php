<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build
// Modified by Defri Indra
// 2021

namespace app\models\base;

use Yii;

/**
 * This is the base-model class for table "user".
 *
 * @property integer $id
 * @property string $username
 * @property string $password
 * @property string $name
 * @property integer $role_id
 * @property string $provinsi_id
 * @property string $kota_id
 * @property string $kecamatan_id
 * @property string $desa_id
 * @property string $alamat
 * @property string $no_hp
 * @property string $secret_token
 * @property string $fcm_token
 * @property string $photo_url
 * @property string $last_login
 * @property string $last_logout
 *
 * @property \app\models\ModulAktifitasIbu[] $modulAktifitasIbus
 * @property \app\models\Profile $profile
 * @property \app\models\Role $role
 * @property \app\models\WilayahProvinsi $provinsi
 * @property \app\models\WilayahKota $kota
 * @property \app\models\WilayahKecamatan $kecamatan
 * @property \app\models\WilayahDesa $desa
 * @property string $aliasModel
 */
abstract class User extends \yii\db\ActiveRecord
{
    const SCENARIO_REGISTER_APP = "register-app";
    const SCENARIO_UPDATE = "update";
    const SCENARIO_RESET_PASSWORD = "reset-password";

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'user';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['username', 'password', 'role_id'], 'required'],
            [['provinsi_id', 'kota_id', 'kecamatan_id', 'desa_id', 'no_hp', 'alamat'], 'required', 'on' => static::SCENARIO_REGISTER_APP],
            [['role_id'], 'integer'],
            [['alamat'], 'string'],
            [['last_login', 'last_logout'], 'safe'],
            [['username', 'password', 'name'], 'string', 'max' => 50],
            [['provinsi_id'], 'string', 'max' => 2],
            [['kota_id'], 'string', 'max' => 4],
            [['kecamatan_id'], 'string', 'max' => 7],
            [['desa_id'], 'string', 'max' => 10],
            [['no_hp'], 'string', 'max' => 20],
            [['secret_token', 'fcm_token'], 'string', 'max' => 200],
            [['photo_url'], 'string', 'max' => 255],
            [['username'], 'unique'],
            [['password'], 'string', 'min' => 6],
            // [['password'], 'match', "pattern" => "/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{6,}$/", "message" => "Password harus mengandung 1 huruf kapital, 1 huruf kecil, dan 1 simbol"],
            [['username'], 'email'],
            [['role_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Role::className(), 'targetAttribute' => ['role_id' => 'id']],
            [['provinsi_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\WilayahProvinsi::className(), 'targetAttribute' => ['provinsi_id' => 'id']],
            [['kota_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\WilayahKota::className(), 'targetAttribute' => ['kota_id' => 'id']],
            [['kecamatan_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\WilayahKecamatan::className(), 'targetAttribute' => ['kecamatan_id' => 'id']],
            [['desa_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\WilayahDesa::className(), 'targetAttribute' => ['desa_id' => 'id']],
        ];
    }

    public function scenarios()
    {
        $parent = parent::scenarios();
        $parent[static::SCENARIO_UPDATE] = [
            "password",
            "alamat",
            "provinsi_id",
            "kota_id",
            "kecamatan_id",
            "desa_id",
            "no_hp",
            "photo_url",
            "fcm_token",
            "last_login",
        ];
        $parent[static::SCENARIO_RESET_PASSWORD] = [
            "password",
            "secret_token",
            "fcm_token",
            "last_login",
        ];
        return $parent;
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'username' => 'Email',
            'password' => 'Password',
            'name' => 'Name',
            'role_id' => 'Role ID',
            'provinsi_id' => 'Provinsi ID',
            'kota_id' => 'Kota ID',
            'kecamatan_id' => 'Kecamatan ID',
            'desa_id' => 'Desa ID',
            'alamat' => 'Alamat',
            'no_hp' => 'No Hp',
            'secret_token' => 'Secret Token',
            'fcm_token' => 'Fcm Token',
            'photo_url' => 'Photo Url',
            'last_login' => 'Last Login',
            'last_logout' => 'Last Logout',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getRole()
    {
        return $this->hasOne(\app\models\Role::className(), ['id' => 'role_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getProvinsi()
    {
        return $this->hasOne(\app\models\WilayahProvinsi::className(), ['id' => 'provinsi_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getKota()
    {
        return $this->hasOne(\app\models\WilayahKota::className(), ['id' => 'kota_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getKecamatan()
    {
        return $this->hasOne(\app\models\WilayahKecamatan::className(), ['id' => 'kecamatan_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDesa()
    {
        return $this->hasOne(\app\models\WilayahDesa::className(), ['id' => 'desa_id']);
    }

    /**
     * @inheritdoc
     * @return \app\models\query\UserQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \app\models\query\UserQuery(get_called_class());
    }

}
